{"version":3,"sources":["util.js","Image/index.js","Link/index.js","App.js","serviceWorker.js","index.js"],"names":["formatDate","date","moment","format","formatDuration","duration","components","years","push","months","join","getDuration","startDate","endDate","startMoment","endMoment","diff","Image","props","classes","shape","size","className","src","alt","desc","aria-label","defaultProps","Link","href","url","disabled","children","App","state","data","this","getData","fetch","response","json","setState","profile","imageURL","label","name","locationURL","role","city","email","phone","social","map","item","about","portfolio","key","online","description","education","certificate","school","experience","company","title","projects","organization","department","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e8366e24.chunk.js","sourcesContent":["import moment from 'moment';\n\nconst DATE_FORMAT = 'MMM YYYY';\n\nexport const formatDate = (date) => {\n    return date ? moment(date).format(DATE_FORMAT) : 'Present';\n}\n\nexport const formatDuration = (duration) => {\n    const components = [];\n    if (duration.years()) {\n        components.push(`${duration.years()} ${duration.years() > 1 ? 'yrs' : 'yr'}`);\n    }\n    if (duration.months()) {\n        components.push(`${duration.months()} ${duration.months() > 1 ? 'mos' : 'mo'}`);\n    }\n    return components.join(' ');\n};\n\nexport const getDuration = (startDate, endDate) => {\n    const startMoment = moment(startDate);\n    const endMoment = endDate ? moment(endDate) : moment();\n    const duration = moment.duration(endMoment.diff(startMoment));\n    return formatDuration(duration);\n}\n\nexport const getTotalDuration = (items) => {\n    let totalDuration = moment.duration(0);\n    items.forEach((item) => {\n        const startMoment = moment(item.startDate);\n        const endMoment = item.endDate ? moment(item.endDate) : moment();\n        const duration = moment.duration(endMoment.diff(startMoment));\n        totalDuration.add(duration);\n    });\n    return formatDuration(totalDuration);\n}","import React from 'react';\nimport './Image.css';\n\nfunction Image(props) {\n    let classes = ['Image'];\n    if (props.shape) {\n        switch(props.shape) {\n            case 'circle': \n                classes.push('cir');\n                break;\n            case 'square': \n                classes.push('sqr');\n                break;\n            default:\n                break;\n        }\n    }\n    if (props.size) {\n        switch(props.size) {\n            case 'large':\n                classes.push('lg');\n                break;\n            case 'medium': \n                classes.push('md');\n                break;\n            case 'small':\n                classes.push('sm');\n                break;\n            default: \n                break;\n        }\n    }\n    return (<img className={classes.join(' ')} src={props.src} alt={props.desc} aria-label={props.desc} />);\n}\n\nImage.defaultProps = {\n    desc: '',\n    src: '',\n    shape: null,\n    size: null\n};\n\nexport default Image;\n","import React from 'react';\nimport './Link.css';\n\nfunction Link(props) {\n    return (<a href={props.url} className=\"Link\" disabled={props.disabled}>\n        {props.children}\n    </a>);\n}\n\nLink.defaultProps = {\n    disabled: false,\n    url: \"\"\n}\n\nexport default Link;","import React from 'react';\nimport { formatDate, getDuration } from './util';\nimport Image from './Image';\nimport Link from './Link';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    data: null\n  };\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  async getData() {\n    const response = await fetch('data.json');\n    const data = await response.json();\n    this.setState({ data });\n  }\n\n  render() {\n    const { state } = this;\n\n    if (!state.data) {\n      return <div />\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Image src={state.data.profile.imageURL} size=\"large\" shape=\"circle\" label=\"Profile image\" />\n          <div className=\"App-col\">\n            <h2>{state.data.profile.name}</h2>\n            <div className=\"App-row\">\n              <Link url={state.data.profile.locationURL}><span role=\"img\" aria-label=\"Earth emoji\">üåè</span> {state.data.profile.city}, {state.data.profile.state}</Link>\n            </div>\n            <div className=\"App-row\">\n              <div className=\"App-flex\">\n                <Link url={`mailto:${state.data.profile.email}`}>\n                  <span role=\"img\" aria-label=\"Email outbox emoji\">üì§</span> Email\n              </Link>\n                <Link url={`tel:+1${state.data.profile.phone}`}>\n                  <span role=\"img\" aria-label=\"Phone emoji\">üì≤</span> Call\n              </Link>\n              <Link url={`sms:+1${state.data.profile.phone}`}>\n                <span role=\"img\" aria-label=\"Speech bubble emoji\">üí¨</span> Text\n              </Link>\n              </div>\n              <div className=\"App-flex\">\n                {state.data.social.map((item) => <Link url={item.url}>\n                  <Image src={item.imageURL} desc={item.name} size=\"small\" />\n                </Link>)}\n              </div>\n            </div>\n          </div>\n        </header>\n        <div className=\"App-body\">\n          <h1>About</h1>\n          <div className=\"App-section\">\n            <p>{state.data.profile.about}</p>\n          </div>\n          <h1>Portfolio</h1>\n          <div className=\"App-grid\">\n            {state.data.portfolio.map((item) => <div className=\"App-col center\" key={item.name}>\n              <Link url={item.url} disabled={!item.online}>\n                <Image src={item.imageURL} desc={item.name} size=\"large\" shape=\"square\" />\n                {!item.online && <div className=\"App-banner\">Coming Soon</div>}\n              </Link>\n              <b>{item.name}</b>\n              <span>{item.description}</span>\n              <span>{formatDate(item.startDate)} - {formatDate(item.endDate)}</span>\n              <span>{getDuration(item.startDate, item.endDate)}</span>\n            </div>)}\n          </div>\n          <h1>Education</h1>\n          <div className=\"App-section\">\n            {state.data.education.map((item) => <div className=\"App-row\" key={item.certificate}>\n              <div className=\"App-col\">\n                <b>{item.certificate}</b>\n                <span>{item.school}</span>\n                <span>{formatDate(item.startDate)} - {formatDate(item.endDate)}</span>\n                <span>{item.city}, {item.state}</span>\n              </div>\n              <Link url={item.url}>\n                <Image src={item.imageURL} desc={`${item.school} logo`} size=\"medium\" />\n              </Link>\n            </div>)}\n          </div>\n          <h1>Experience</h1>\n          <div className=\"App-section\">\n            {state.data.experience.map((item) => <div className=\"App-row\" key={item.company}>\n              <div className=\"App-col\">\n                <b>{item.title}</b>\n                <span>{item.company}</span>\n                <span>{formatDate(item.startDate)} - {formatDate(item.endDate)} ¬∑ {getDuration(item.startDate, item.endDate)}</span>\n                <span>{item.city}, {item.state}</span>\n              </div>\n              <Link url={item.url}>\n                <Image src={item.imageURL} desc={`${item.company} logo`} size=\"small\" />\n              </Link>\n            </div>)}\n          </div>\n          <h1>Projects</h1>\n          <div className=\"App-section\">\n            {state.data.projects.map((item) => <div className=\"App-row\" key={item.name}>\n              <div className=\"App-col\">\n                <b>{item.name}</b>\n                <span>{item.description}</span>\n                <span>{item.organization}</span>\n                <span>{item.department}</span>\n                <span>{formatDate(item.startDate)} - {formatDate(item.endDate)} ¬∑ {getDuration(item.startDate, item.endDate)}</span>\n              </div>\n              <Link url={item.url}>\n                <Image src={item.imageURL} desc={item.name} size=\"medium\" />\n              </Link>\n            </div>)}\n          </div>\n          <h1>Things I Enjoy</h1>\n          <div className=\"App-section\">\n            <div className=\"App-col\">\n              <div><span role=\"img\" aria-label=\"Coffee emoji\">‚òï</span> Coffee</div>\n              <div><span role=\"img\" aria-label=\"Beer emoji\">üç∫</span> Beer</div>\n              <div><span role=\"img\" aria-label=\"Taco emoji\">üåÆ</span> Mexican Food</div>\n              <div><span role=\"img\" aria-label=\"Flexed bicep emoji\">üí™</span> Exercising</div>\n              <div><span role=\"img\" aria-label=\"Tragedy and comedy masks emoji\">üé≠</span> Performing Arts</div>\n              <div><span role=\"img\" aria-label=\"Woman dancing emoji\">üíÉ</span> Dancing</div>\n              <div><span role=\"img\" aria-label=\"Roller coaster emoji\">üé¢</span> Theme Parks</div>\n              <div><span role=\"img\" aria-label=\"Map emoji\">üó∫Ô∏è</span> Traveling</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}